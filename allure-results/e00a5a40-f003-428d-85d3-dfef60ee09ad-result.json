{"name": "Get courses", "status": "broken", "statusDetails": {"message": "pydantic_core._pydantic_core.ValidationError: 1 validation error for GetCoursesQuerySchema\nuserId\n  Field required [type=missing, input_value={'user_id': 'd6ee0757-a3f...4ba3-82e6-838aa9935294'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing", "trace": "self = <testdata.tests.courses.test_courses.TestCourses object at 0x0000024F3A2BDD90>\ncourses_client = <clients.courses.courses_client.CoursesClient object at 0x0000024F3A331670>\nfunction_user = UserFixture(request=CreateUserRequestSchema(email='sharon22@example.net', password='!yZFCAuZx0', last_name='Phillips',...a3-82e6-838aa9935294', email='sharon22@example.net', last_name='Phillips', first_name='Henry', middle_name='Gregory')))\nfunction_course = CourseFixture(request=CreateCourseRequestSchema(title='Purpose during both listen.', max_score=90, min_score=6, descri...3-82e6-838aa9935294', email='sharon22@example.net', last_name='Phillips', first_name='Henry', middle_name='Gregory'))))\n\n    @allure.title(\"Get courses\")\n    @allure.story(AllureStory.GET_ENTITIES)\n    @allure.tag(AllureTag.GET_ENTITIES)\n    @allure.severity(Severity.BLOCKER)\n    @allure.sub_suite(AllureStory.GET_ENTITIES)\n    def test_get_courses(\n            self,\n            courses_client: CoursesClient,\n            function_user: UserFixture,\n            function_course: CourseFixture,\n            ):\n>       query = GetCoursesQuerySchema(user_id=function_user.response.user.id)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       pydantic_core._pydantic_core.ValidationError: 1 validation error for GetCoursesQuerySchema\nE       userId\nE         Field required [type=missing, input_value={'user_id': 'd6ee0757-a3f...4ba3-82e6-838aa9935294'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\n\ntestdata\\tests\\courses\\test_courses.py:61: ValidationError"}, "attachments": [{"name": "log", "source": "2261306d-cb51-4bf6-8e9a-4d1618ddda2d-attachment.txt", "type": "text/plain"}], "start": 1755782135224, "stop": 1755782135224, "uuid": "784fc665-7a30-49bb-9851-ad3584afd8a3", "historyId": "32e05e3e662d9156a63b5c2192049add", "testCaseId": "32e05e3e662d9156a63b5c2192049add", "fullName": "testdata.tests.courses.test_courses.TestCourses#test_get_courses", "labels": [{"name": "tag", "value": "GET_ENTITIES"}, {"name": "subSuite", "value": "Get entities"}, {"name": "tag", "value": "REGRESSION"}, {"name": "feature", "value": "Courses"}, {"name": "epic", "value": "LMS service"}, {"name": "tag", "value": "COURSES"}, {"name": "severity", "value": "blocker"}, {"name": "suite", "value": "Courses"}, {"name": "story", "value": "Get entities"}, {"name": "parentSuite", "value": "LMS service"}, {"name": "tag", "value": "regression"}, {"name": "tag", "value": "courses"}, {"name": "host", "value": "WIN-D6J80KEQ9S3"}, {"name": "thread", "value": "11844-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testdata.tests.courses.test_courses"}], "titlePath": ["testdata", "tests", "courses", "test_courses.py", "TestCourses"]}