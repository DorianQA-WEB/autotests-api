{"name": "Create exercises", "status": "broken", "statusDetails": {"message": "pydantic_core._pydantic_core.ValidationError: 1 validation error for CreateExerciseRequestSchema\nid\n  Field required [type=missing, input_value={'course_id': '1b77106b-c...4ba1-9061-c0359ce82668'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing", "trace": "self = <testdata.tests.exerscises.test_exercises.TestExercises object at 0x000002637F92C680>\nexercise_client = <clients.exercises.exercises_client.ExercisesClient object at 0x000002637F3EFE00>\nfunction_course = CourseFixture(request=CreateCourseRequestSchema(title='Play likely medical writer any ten.', max_score=59, min_score=2...4691-bf73-3132c7a595cc', email='qjefferson@example.com', last_name='Brown', first_name='James', middle_name='Corey'))))\n\n    @allure.title(\"Create exercises\")\n    @allure.tag(AllureTag.CREATE_ENTITY)\n    @allure.story(AllureStory.CREATE_ENTITY)\n    @allure.severity(Severity.BLOCKER)\n    @allure.sub_suite(AllureStory.CREATE_ENTITY)\n    def test_create_exercise(self,\n                              exercise_client: ExercisesClient,\n                              function_course: CourseFixture,\n                              ):\n>       request = CreateExerciseRequestSchema(course_id=function_course.response.course.id)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       pydantic_core._pydantic_core.ValidationError: 1 validation error for CreateExerciseRequestSchema\nE       id\nE         Field required [type=missing, input_value={'course_id': '1b77106b-c...4ba1-9061-c0359ce82668'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\n\ntestdata\\tests\\exerscises\\test_exercises.py:40: ValidationError"}, "attachments": [{"name": "log", "source": "7e39b31e-53b6-443b-9a15-8b32646ffcbb-attachment.txt", "type": "text/plain"}], "start": 1755782137134, "stop": 1755782137135, "uuid": "161daaa4-4ba6-4cf3-890e-b637740337cc", "historyId": "4055ccb4453ed4d82b8de676b5162060", "testCaseId": "4055ccb4453ed4d82b8de676b5162060", "fullName": "testdata.tests.exerscises.test_exercises.TestExercises#test_create_exercise", "labels": [{"name": "severity", "value": "blocker"}, {"name": "tag", "value": "REGRESSION"}, {"name": "suite", "value": "Exercises"}, {"name": "tag", "value": "CREATE_ENTITY"}, {"name": "parentSuite", "value": "LMS service"}, {"name": "feature", "value": "Exercises"}, {"name": "tag", "value": "EXERCISES"}, {"name": "subSuite", "value": "Create entity"}, {"name": "story", "value": "Create entity"}, {"name": "epic", "value": "LMS service"}, {"name": "tag", "value": "regression"}, {"name": "tag", "value": "exercises"}, {"name": "host", "value": "WIN-D6J80KEQ9S3"}, {"name": "thread", "value": "17636-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testdata.tests.exerscises.test_exercises"}], "titlePath": ["testdata", "tests", "exerscises", "test_exercises.py", "TestExercises"]}